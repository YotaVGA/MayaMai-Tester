Analisi del gioco "Maya? Mai!" di Roberto Rampini (http://www.robertorampini.it/) a cura di Fulvio Satta (Yota_VGA@users.sourceforge.net)

La prima cosa che può essere notata è che il tabellone ha un'evidente simmetria: ruotandolo di 180° torna lo stesso.
La seconda cosa da notare è che i simboli utilizzati sono solo 5. Ogni tessera ha 4 simboli, per cui di volta in volta non ne appare uno solo, visto che ogni tessera ha sempre simboli diversi. Quindi esistono 5 possibilità di escludere un simbolo. Escluso un simbolo esistono 4! modi di ordinare gli altri 4, e 4 modi di ruotare la tessera, quindi 3! modi di generare simboli ordinati a meno della rotazione. Abbiamo quindi 5 * 3! = 30 modi di generare tessere diverse tra loro (si intendono 2 tessere diverse se ruotandone una non si ottiene l'altra). Immediatamente si potrebbe pensare che le 30 tessere sono i 30 modi possibili di generare una tessera. Di fatto è così, una veloce verifica lo mostra.

Notato questo, si può immediatamente dire che se esiste una soluzione, esiste quella che si ottiene ruotandola di 180°. Inoltre questa dev'essere diversa. Se infatti fosse uguale, ruotandola si otterrebbe la stessa soluzione, il che vorrebbe dire che un tassello, ruotato di 180°, corrisponderebbe ad un altro tassello, ma abbiamo detto che tutti i tasselli sono tra loro diversi.

Questo vuol dire che nonostante l'elevata simmetria del tabellone le soluzioni non hanno nessuna simmetria, e che sono sicuramente pari. Non è una prova, ma fa pensare che la soluzione potrebbe non esistere.

Un'altra cosa che si può evincere dal tabellone è che la rotazione, stabilite le posizioni, è sicuramente determinata. Ovvero, se esiste una soluzione con un dato ordinamento dei pezzi, la rotazione dei pezzi nella soluzione è sicuramente unica. Per vederlo è sufficiente considerare che ai bordi esiste una sola rotazione che allinea ogni tassello al bordo. Una volta orientati i tasselli ai bordi, questi diventano a loro volta bordi per i tasselli più interni, e via dicendo. Quindi i tasselli si orientano automaticamente. Il che vuol dire che si può ridurre la prova per le soluzioni a 30! combinazioni possibili.

Le combinazioni sono ancora troppe, se le si vuole provare al computer, per cui è possibile eseguire diverse potature. La prima, decisamente banale, consiste nello scegliere solo i tasselli che corrispondono coi vicini già inseriti e coi bordi. Questa potatura non è comunque sufficiente ad ottenere buone prestazioni dall'algoritmo. È possibile però notare che anche le caselle vuote possono dare notevoli informazioni. Infatti, se da un lato della casella è stato usato un simbolo (per un'altra casella vicina, o perché c'è un bordo), questo valore non può essere utilizzato in un altro lato. Quindi in questo modo non solo i simboli a contatto della tessera danno informazioni utili alla scelta delle tessere, ma anche i simboli a contatto di uno spazio a contatto dello spazio che si sta esaminando.

Prese queste 2 potature molto semplici, è necessario esaminare le soluzioni cercando di ridurre il più possibile le combinazioni, quindi cercando di prendere tessere coerenti, ovvero cercando di prendere tessere che difficilmente porteranno ad una soluzione non valida. Questo lo si può ottenere scegliendo il più possibile tessere con poche combinazioni rispetto ai tentativi di soluzioni trovati di volta in volta, e cercando di usare il più possibile i bordi, poiché i bordi non possono cambiare tra i vari tentativi di soluzione.

Per l'occasione ho scritto un semplicissimo programma in python (per la cui esecuzione serve python3 e python-progressbar, ovviamente compilato per python3) che prova le soluzioni. Il programma è allegato col documento. Avviandolo eseguirà tutte le prove necessarie, e non troverà alcuna soluzione. A meno di bug (che non escludo ci siano, ma tutte le prove ed i test che ho potuto fare nel giorno e mezzo richiesti per lo sviluppo hanno avuto esito positivo, oppure esito negativo a causa di un bug che poi è stato corretto) questo vuol dire che il puzzle non ha soluzione.

Mi sono permesso di usare il nome "Maya? Mai!" nel programma perché non mi è parso che fosse un marchio registrato. Qualora ci fossero problemi legali di qualunque tipo, sul nome o su altro, comunicatemeli, provvederò a sistemarli quanto prima.
